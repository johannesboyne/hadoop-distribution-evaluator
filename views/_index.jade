html
  head
    title!= title
    metar( name="viewport", content="width=device-width, initial-scale=1")
    link(rel='stylesheet', href='/bootstrap/dist/css/bootstrap.min.css')
    link(rel='stylesheet', href='/main.css')
    script(src='/jquery/dist/jquery.min.js')
    script(src='/bootstrap/dist/js/bootstrap.min.js')
        
  body
    .container
      .row
        .col-md-12
          .table-responsive
            table.table.table-striped.table-bordered.table-hover
              caption My Matrix
              thead
                tr
                  th(colspan=3)
                  th(colspan=2) Cloudera
                  th(colspan=2) Hortonworks
                  th(colspan=2) MapR
                tr
                  th Categories
                  th Cat. W. (%)
                  th Tot. W. (%)
                  th Poi. 1-10
                  th w. Points
                  th Poi. 1-10
                  th w. Points
                  th Poi. 1-10
                  th w. Points
              tbody
                each val, index in data.categories
                  tr.main
                    th= val.title
                    th(contentEditable="true") #{val.cat_weight*100}%
                    th #{Math.round((val.sub_categories.map(function (sc) { return sc.cat_weight*val.cat_weight }).reduce(function (prev, cur) { return prev + cur; }))*100)/100}
                    each dis, nindex in data.distributions
                      th
                        th= Math.round((val.sub_categories.map(function (sc) { return sc.distribution_values.map(function (dv) { return dv.points*sc.cat_weight*val.cat_weight }) }).reduceRight(function (p,c) { return p.map(function (_p, i) { return _p + c[i] }) })[nindex])*100)/100
                  each sub in val.sub_categories
                    tr.sub
                      th= sub.title
                      th(contentEditable="true") #{sub.cat_weight*100}%
                      th #{Math.round(sub.cat_weight*val.cat_weight*100)}%
                      each value in sub.distribution_values
                        th= value.points
                        th #{Math.round(value.points*(sub.cat_weight*val.cat_weight)*100)/100}
                tr
                  th Summe
                  th
                  th
                  each d, j in data.distributions
                    th
                    th= Math.round((data.categories.map(function (mc) { return mc.sub_categories.map(function (sc) { return sc.distribution_values.map(function (dv) { return dv.points*sc.cat_weight*mc.cat_weight }) }).reduceRight(function (p,c) { return p.map(function (_p, i) { return _p + c[i] }) }) }).reduceRight(function (p,c) { return p.map(function (_p, i) { return _p + c[i] }) })[j])*100)/100
